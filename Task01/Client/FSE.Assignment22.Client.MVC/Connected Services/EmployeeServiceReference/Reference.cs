//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FSE.Assignment22.Client.MVC.EmployeeServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/FSE.Assignment22.Service.Core")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="Department Name")]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Designation {
            get {
                return this.DesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignationField, value) != true)) {
                    this.DesignationField = value;
                    this.RaisePropertyChanged("Designation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="Employee ID")]
        public int EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="Employee Name")]
        public string EmployeeName {
            get {
                return this.EmployeeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeNameField, value) != true)) {
                    this.EmployeeNameField = value;
                    this.RaisePropertyChanged("EmployeeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeeServiceReference.IEmployeeService")]
    public interface IEmployeeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/AddEmployee", ReplyAction="http://tempuri.org/IEmployeeService/AddEmployeeResponse")]
        void AddEmployee(FSE.Assignment22.Client.MVC.EmployeeServiceReference.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/AddEmployee", ReplyAction="http://tempuri.org/IEmployeeService/AddEmployeeResponse")]
        System.Threading.Tasks.Task AddEmployeeAsync(FSE.Assignment22.Client.MVC.EmployeeServiceReference.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/RetreiveEmployees", ReplyAction="http://tempuri.org/IEmployeeService/RetreiveEmployeesResponse")]
        FSE.Assignment22.Client.MVC.EmployeeServiceReference.Employee[] RetreiveEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/RetreiveEmployees", ReplyAction="http://tempuri.org/IEmployeeService/RetreiveEmployeesResponse")]
        System.Threading.Tasks.Task<FSE.Assignment22.Client.MVC.EmployeeServiceReference.Employee[]> RetreiveEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/RetreiveEmployeeByID", ReplyAction="http://tempuri.org/IEmployeeService/RetreiveEmployeeByIDResponse")]
        FSE.Assignment22.Client.MVC.EmployeeServiceReference.Employee[] RetreiveEmployeeByID(int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/RetreiveEmployeeByID", ReplyAction="http://tempuri.org/IEmployeeService/RetreiveEmployeeByIDResponse")]
        System.Threading.Tasks.Task<FSE.Assignment22.Client.MVC.EmployeeServiceReference.Employee[]> RetreiveEmployeeByIDAsync(int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/UpdateEmployee", ReplyAction="http://tempuri.org/IEmployeeService/UpdateEmployeeResponse")]
        void UpdateEmployee(FSE.Assignment22.Client.MVC.EmployeeServiceReference.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/UpdateEmployee", ReplyAction="http://tempuri.org/IEmployeeService/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task UpdateEmployeeAsync(FSE.Assignment22.Client.MVC.EmployeeServiceReference.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/DeleteEmployee", ReplyAction="http://tempuri.org/IEmployeeService/DeleteEmployeeResponse")]
        bool DeleteEmployee(int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/DeleteEmployee", ReplyAction="http://tempuri.org/IEmployeeService/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task<bool> DeleteEmployeeAsync(int employeeId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeServiceChannel : FSE.Assignment22.Client.MVC.EmployeeServiceReference.IEmployeeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeServiceClient : System.ServiceModel.ClientBase<FSE.Assignment22.Client.MVC.EmployeeServiceReference.IEmployeeService>, FSE.Assignment22.Client.MVC.EmployeeServiceReference.IEmployeeService {
        
        public EmployeeServiceClient() {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddEmployee(FSE.Assignment22.Client.MVC.EmployeeServiceReference.Employee employee) {
            base.Channel.AddEmployee(employee);
        }
        
        public System.Threading.Tasks.Task AddEmployeeAsync(FSE.Assignment22.Client.MVC.EmployeeServiceReference.Employee employee) {
            return base.Channel.AddEmployeeAsync(employee);
        }
        
        public FSE.Assignment22.Client.MVC.EmployeeServiceReference.Employee[] RetreiveEmployees() {
            return base.Channel.RetreiveEmployees();
        }
        
        public System.Threading.Tasks.Task<FSE.Assignment22.Client.MVC.EmployeeServiceReference.Employee[]> RetreiveEmployeesAsync() {
            return base.Channel.RetreiveEmployeesAsync();
        }
        
        public FSE.Assignment22.Client.MVC.EmployeeServiceReference.Employee[] RetreiveEmployeeByID(int employeeId) {
            return base.Channel.RetreiveEmployeeByID(employeeId);
        }
        
        public System.Threading.Tasks.Task<FSE.Assignment22.Client.MVC.EmployeeServiceReference.Employee[]> RetreiveEmployeeByIDAsync(int employeeId) {
            return base.Channel.RetreiveEmployeeByIDAsync(employeeId);
        }
        
        public void UpdateEmployee(FSE.Assignment22.Client.MVC.EmployeeServiceReference.Employee employee) {
            base.Channel.UpdateEmployee(employee);
        }
        
        public System.Threading.Tasks.Task UpdateEmployeeAsync(FSE.Assignment22.Client.MVC.EmployeeServiceReference.Employee employee) {
            return base.Channel.UpdateEmployeeAsync(employee);
        }
        
        public bool DeleteEmployee(int employeeId) {
            return base.Channel.DeleteEmployee(employeeId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteEmployeeAsync(int employeeId) {
            return base.Channel.DeleteEmployeeAsync(employeeId);
        }
    }
}
